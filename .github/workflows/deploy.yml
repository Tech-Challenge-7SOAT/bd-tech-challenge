name: 'Terraform Deploy'

on:
  push:
    branches:
      - main

env:
  TERRAFORM_DESTROY: false

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Terraform Validate
      - name: Terraform Validate
        run: terraform validate

      # Destroy the Terraform infrastructure if TERRAFORM_DESTROY is true
      - name: Terraform Destroy
        if: ${{ env.TERRAFORM_DESTROY == 'true' }}
        run: terraform destroy --auto-approve -var "DB_NAME=${{ secrets.DB_NAME }}" -var "DB_USERNAME=${{ secrets.DB_USERNAME }}" -var "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" -var "AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}" -var "AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}" -var "AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}" -var "TERRAFORM_DESTROY=${{ env.TERRAFORM_DESTROY }}" exit 0

      # Plan the Terraform deployment
      - name: Terraform Plan
        run: terraform plan -var "DB_NAME=${{ secrets.DB_NAME }}" -var "DB_USERNAME=${{ secrets.DB_USERNAME }}" -var "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" -var "AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}" -var "AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}" -var "AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}"

      # Apply the Terraform configuration
      - name: Terraform Apply
        run: terraform apply --auto-approve -var "DB_NAME=${{ secrets.DB_NAME }}" -var "DB_USERNAME=${{ secrets.DB_USERNAME }}" -var "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" -var "AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}" -var "AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}" -var "AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}"